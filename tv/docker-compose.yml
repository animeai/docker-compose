---
version: "3.8"
networks:
  t2_proxy:
    external: true
services:
  bazarr:
#Bazarr is a companion application to Sonarr and Radarr that manages and downloads subtitles based on your requirements.
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
    volumes:
      - /var/data/bazarr/config:/config
      - /mnt/movies:/movies
      - /mnt/tv:/tv
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.bazarr-https.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr-https.entrypoints=https
      - traefik.http.routers.bazarr-https.rule=Host(`${AIRSONIC_SUB?AIRSONIC_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.bazarr-https.tls=true
      - traefik.http.routers.bazarr-https.tls.certresolver=myresolver
      - traefik.http.routers.bazarr-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  embystat:
#EmbyStat is a personal web server that can calculate all kinds of statistics from your (local) Emby or Jellyfin server. Just install this on your server and let him calculate all kinds of fun stuff. This project is still in Alpha fase, but feel free to pull in on your computer and test it out yourself.
    image: lscr.io/linuxserver/embystat
    container_name: embystat
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
    volumes:
      - /var/data/embystat/config:/config
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.embystat-https.loadbalancer.server.port=6555
      - traefik.http.routers.embystat-https.entrypoints=https
      - traefik.http.routers.embystat-https.rule=Host(`${EMBYSTAT_SUB?EMBYSTAT_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.embystat-https.tls=true
      - traefik.http.routers.embystat-https.tls.certresolver=myresolver
      - traefik.http.routers.embystat-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  emby:
#Bringing all of your home videos, music, and photos together into one place has never been easier
    image: lscr.io/linuxserver/emby
    container_name: emby
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
    volumes:
      - /var/data/emby/config:/config
      - /mnt/tv:/data/tvshows
      - /mnt/movies:/data/movies
      - /mnt/anime:/data/anime
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.emby-https.loadbalancer.server.port=8096
      - traefik.http.routers.emby-https.entrypoints=https
      - traefik.http.routers.emby-https.rule=Host(`${EMBY_SUB?EMBY_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.emby-https.tls=true
      - traefik.http.routers.emby-https.tls.certresolver=myresolver
      - traefik.http.routers.emby-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  gaps:
#Search your movies and find missing movies from MovieDB collections. 
    image: housewrecker/gaps:latest # housewrecker/gaps:arm-latest for pi
    container_name: gaps
    volumes:
      - /var/data/gaps/data:/gaps
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.gitea-https.loadbalancer.server.port=5000 
      - traefik.http.routers.gitea-https.entrypoints=https
      - traefik.http.routers.gitea-https.rule=Host(`${GAPS_SUB?GAPS_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.gitea-https.tls=true
      - traefik.http.routers.gitea-https.tls.certresolver=myresolver
      - traefik.http.routers.gitea-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  jellyfin:
#Jellyfin is the volunteer-built media solution that puts you in control of your media. Stream to any device from your own server, with no strings attached.
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_SUB?JELLYFIN_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}
    volumes:
      - /var/data/jellyfin/config:/config
      - /mnt/tv:/data/tvshows
      - /mnt/movies:/data/movies
      - /mnt/anime:/data/anime
    ports:
      - 7359:7359/udp
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.jellyfin-https.loadbalancer.server.port=8096
      - traefik.http.routers.jellyfin-https.entrypoints=https
      - traefik.http.routers.jellyfin-https.rule=Host(`${JELLYFIN_SUB?JELLYFIN_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.jellyfin-https.tls=true
      - traefik.http.routers.jellyfin-https.tls.certresolver=myresolver
      - traefik.http.routers.jellyfin-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  moviematch:
#MovieMatch connects to your Plex server and gets a list of movies (from any libraries marked as a movie library). As many people as you want connect to your MovieMatch server and get a list of shuffled movies. Swipe right to üëç, swipe left to üëé. If two (or more) people swipe right on the same movie, it'll show up in everyone's matches. The movies that the most people swiped right on will show up first.
   image: lukechannings/moviematch:latest
   container_name: moviematch
   environment:
    PLEX_URL: "${PLEX_SUB?PLEX_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}"
    PLEX_TOKEN: "PLEX_TOKEN?PLEX_TOKEN Variable not set}"
    labels:
      - traefik.enable=true
      - traefik.http.services.dashmachine-https.loadbalancer.server.port=8000
      - traefik.http.routers.dashmachine-https.entrypoints=https
      - traefik.http.routers.dashmachine-https.rule=Host(`${MOVIEMATCH_SUB?MOVIEMATCH_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.dashmachine-https.tls=true
      - traefik.http.routers.dashmachine-https.tls.certresolver=myresolver
      - traefik.http.routers.dashmachine-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  ombi:
#Ombi is a self-hosted web application that automatically gives your shared Plex or Emby users the ability to request content by themselves!
    image: lscr.io/linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
      - BASE_URL=/ombi #optional
    volumes:
      - /var/data/ombi/config:/config
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.ombi-https.loadbalancer.server.port=3579
      - traefik.http.routers.ombi-https.entrypoints=https
      - traefik.http.routers.ombi-https.rule=Host(`${OMBI_SUB?OMBI_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.ombi-https.tls=true
      - traefik.http.routers.ombi-https.tls.certresolver=myresolver
      - traefik.http.routers.ombi-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  overseerr:
#Overseerr is a request management and media discovery tool built to work with your existing Plex ecosystem.
    image: lscr.io/linuxserver/overseerr
    container_name: overseerr
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
    volumes:
      - /var/data/overseerr/config:/config
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.overseerr-https.loadbalancer.server.port=5055
      - traefik.http.routers.overseerr-https.entrypoints=https
      - traefik.http.routers.overseerr-https.rule=Host(`${OVERSEERR_SUB?OVERSEERR_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.overseerr-https.tls=true
      - traefik.http.routers.overseerr-https.tls.certresolver=myresolver
      - traefik.http.routers.overseerr-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  plex:
#Plex gives you the power to add, access and share all the entertainment that matters to you, on almost any device.
    image: lscr.io/linuxserver/plex
    container_name: plex
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - VERSION=docker
#      - PLEX_CLAIM=
    ports:
      - 32400:32400
      - 1900:1900/udp
      - 3005:3005
      - 5353:5353/udp
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469 
    volumes:
      - /mnt/plex/config:/config
      - /mnt/tv:/tv
      - /mnt/anime:/anime
      - /mnt/movies:/movies
      - /mnt/music:/music
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.plex-https.loadbalancer.server.port=32469
      - traefik.http.routers.plex-https.entrypoints=https
      - traefik.http.routers.plex-https.rule=Host(`${PLEX_SUB?PLEX_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.plex-https.tls=true
      - traefik.http.routers.plex-https.tls.certresolver=myresolver
      - traefik.http.routers.plex-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  tautulli:
#Tautulli is a 3rd party application that you can run alongside your Plex Media Server to monitor activity and track various statistics.
    image: lscr.io/linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
    volumes:
      - /var/data/tautulli/config:/config
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.tautulli-https.loadbalancer.server.port=8181
      - traefik.http.routers.tautulli-https.entrypoints=https
      - traefik.http.routers.tautulli-https.rule=Host(`${TAUTULLI_SUB?TAUTULLI_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.tautulli-https.tls=true
      - traefik.http.routers.tautulli-https.tls.certresolver=myresolver
      - traefik.http.routers.tautulli-https.middlewares=authelia@docker
    networks:
      t2_proxy: