version: "3.7"
networks:
  t2_proxy:
    external: true
services:
  grocy:
#ERP beyond your fridge. grocy is a web-based self-hosted groceries & household management solution for your home.
    image: lscr.io/linuxserver/grocy
    container_name: grocy
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/London
    volumes:
      - /var/data/grocy/config:/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.grocy-https.loadbalancer.server.port=80 
      - traefik.http.routers.grocy-https.entrypoints=https
      - traefik.http.routers.grocy-https.rule=Host(`${GROCY_SUB?GROCY_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.grocy-https.tls=true
      - traefik.http.routers.grocy-https.tls.certresolver=myresolver
      - traefik.http.routers.grocy-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  magicmirror:
#MagicMirror² is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror² allows you to convert your hallway or bathroom mirror into your personal assistant.
    container_name: magicmirror
    container_name: magicmirror
    image: bastilimbach/docker-magicmirror
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/data/magic_mirror/config:/opt/magic_mirror/config
      - /var/data/magic_mirror/modules:/opt/magic_mirror/modules
    labels:
      - traefik.enable=true
      - traefik.http.services.magicmirror-https.loadbalancer.server.port=8080
      - traefik.http.routers.magicmirror-https.entrypoints=https
      - traefik.http.routers.magicmirror-https.rule=Host(`${MAGICMIRROR_SUB?RUTORRENT_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.magicmirror-https.tls=true
      - traefik.http.routers.magicmirror-https.tls.certresolver=myresolver
      - traefik.http.routers.magicmirror-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  mealie:
#Mealie is a self hosted recipe manager and meal planner with a RestAPI backend and a reactive frontend application built in Vue for a pleasant user experience
    container_name: mealie
    image: hkotel/mealie:latest
    restart: unless-stopped
    environment:
      PUID: 0
      PGID: 0
      TZ: Europe/London
      RECIPE_PUBLIC: 'true'
      RECIPE_SHOW_NUTRITION: 'true'
      RECIPE_SHOW_ASSETS: 'true'
      RECIPE_LANDSCAPE_VIEW: 'true'
      RECIPE_DISABLE_COMMENTS: 'false'
      RECIPE_DISABLE_AMOUNT: 'false'
    volumes:
      - /var/data/mealie/data:/app/data
    labels:
      - traefik.enable=true
      - traefik.http.services.mealie-https.loadbalancer.server.port=80
      - traefik.http.routers.mealie-https.entrypoints=https
      - traefik.http.routers.mealie-https.rule=Host(`${MEALIE_SUB?MEALIE_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.mealie-https.tls=true
      - traefik.http.routers.mealie-https.tls.certresolver=myresolver
      - traefik.http.routers.mealie-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  metatube:
#Python web ui to download videos from YouTube and add metadata on top of it
    restart: always
    image: jvt038/metatube:latest
    container_name: metatube
    environment:
      - PORT=5000
      - HOST=0.0.0.0
    volumes:
      - /mnt/downloads:/downloads
      - /var/data/metatube/db:/database
    labels:
        - traefik.enable=true
        - traefik.http.services.metatube-https.loadbalancer.server.port=5000
        - traefik.http.routers.metatube-https.entrypoints=https
        - traefik.http.routers.metatube-https.rule=Host(`${METATUBE_SUB?METATUBE_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
        - traefik.http.routers.metatube-https.tls=true
        - traefik.http.routers.metatube-https.tls.certresolver=myresolver
        - traefik.http.routers.metatube-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  metube:
#Web GUI for youtube-dl (using the yt-dlp fork) with playlist support. Allows you to download videos from YouTube and dozens of other sites 
    image: alexta69/metube
    container_name: metube
    restart: unless-stopped
    volumes:
      - /mnt/downloads:/downloads
    labels:
        - traefik.enable=true
        - traefik.http.services.metatube-https.loadbalancer.server.port=8081
        - traefik.http.routers.metatube-https.entrypoints=https
        - traefik.http.routers.metatube-https.rule=Host(`${METUBE_SUB?METUBE_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
        - traefik.http.routers.metatube-https.tls=true
        - traefik.http.routers.metatube-https.tls.certresolver=myresolver
        - traefik.http.routers.metatube-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  whoogle-search:
#Self-hosted, ad-free, privacy-respecting metasearch engine. 
    image: benbusby/whoogle-search
    container_name: whoogle-search
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 128M
    labels:
      - traefik.enable=true
      - traefik.http.services.whoogle-https.loadbalancer.server.port=5000
      - traefik.http.routers.whoogle-https.entrypoints=https
      - traefik.http.routers.whoogle-https.rule=Host(`${WHOOGLE_SUB?WHOOGLE_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.whoogle-https.tls=true
      - traefik.http.routers.whoogle-https.tls.certresolver=myresolver
      - traefik.http.routers.whoogle-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  youtubedl:
#YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.
    environment: 
      ALLOW_CONFIG_MUTATIONS: 'true'
    volumes:
      - /var/data/youtubedl/appdata:/app/appdata
      - /mnt/youtubedl/audio:/app/audio
      - /mnt/youtubedl/video:/app/video
      - /var/data/youtubedl/subscriptions:/app/subscriptions
      - /var/data/youtubedl/users:/app/users
    image: tzahi12345/youtubedl-material:latest
    container_name: youtube-dl
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.youtubedl-https.loadbalancer.server.port=22300 
      - traefik.http.routers.youtubedl-https.entrypoints=https
      - traefik.http.routers.youtubedl-https.rule=Host(`${WORDPRESS_SUB?WORDPRESS_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.youtubedl-https.tls=true
      - traefik.http.routers.youtubedl-https.tls.certresolver=myresolver
      - traefik.http.routers.youtubedl-https.middlewares=authelia@docker
    networks:
      - t2_proxy