version: "3.7"
networks:
  t2_proxy:
    external: true
services:
  airsonic-advanced:
#Airsonic-Advanced is a more modern implementation of the Airsonic fork with several key performance and feature enhancements. It adds and supersedes several features in Airsonic.. Airsonic is a free, web-based media streamer, providing ubiquitous access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.
    image: lscr.io/linuxserver/airsonic-advanced
    container_name: airsonic-advanced
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/London
      - CONTEXT_PATH=AIRSONIC_SUB?AIRSONIC_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set} #optional
    volumes:
      - /var/data/airsonic/config:/config
      - /mnt/music:/music
      - /mnt/playlists:/playlists
      - /mnt/podcasts:/podcasts
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.airsonic-https.loadbalancer.server.port=4040
      - traefik.http.routers.airsonic-https.entrypoints=https
      - traefik.http.routers.airsonic-https.rule=Host(`${AIRSONIC_SUB?AIRSONIC_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.airsonic-https.tls=true
      - traefik.http.routers.airsonic-https.tls.certresolver=myresolver
      - traefik.http.routers.airsonic-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  beetsio:
#beets.io based man-in-the-middle of your torrent client and music player
    image: sentriz/betanin
    container_name: beetzio
    restart: unless-stopped
    environment:
      - UID=0
      - GID=0
    volumes:
      - /var/data/betanin/data:/b/.local/share/betanin/
      - /var/data/betanin/config:/b/.config/betanin/
      - /var/data/betanin/beets:/b/.config/beets/
      - /mnt/music:/music/
      - /mnt/downloads/downloads:/downloads/
    labels:
        - traefik.enable=true
        - traefik.http.services.betanin-https.loadbalancer.server.port=9393
        - traefik.http.routers.betanin-https.entrypoints=https
        - traefik.http.routers.betanin-https.rule=Host(`${BETANIN_SUB?BETANIN_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
        - traefik.http.routers.betanin-https.tls=true
        - traefik.http.routers.betanin-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  headphones:
#Headphones is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, ÂµTorrent and Blackhole.
    image: lscr.io/linuxserver/headphones
    container_name: headphones
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/London
    volumes:
      - /var/data/headphones/config:/config
      - /mnt/downloads:/downloads
      - /mnt/music:/music
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.headphones-https.loadbalancer.server.port=8181
      - traefik.http.routers.headphones-https.entrypoints=https
      - traefik.http.routers.headphones-https.rule=Host(`${EMULATORJS_BACKEND_SUB?EMULATORJS_BACKEND_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.headphones-https.tls=true
      - traefik.http.routers.headphones-https.tls.certresolver=myresolver
      - traefik.http.routers.headphones-https.middlewares=authelia@docker
    networks:
      - t2_proxy
  mstream:
#mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. 
    image: lscr.io/linuxserver/mstream
    container_name: mstream
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/London
    volumes:
      - /var/data/mstream/config:/config
      - /mnt/music:/music
      - /mnt/audiobooks:/audiobooks
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.mstream-https.loadbalancer.server.port=3000
      - traefik.http.routers.mstream-https.entrypoints=https
      - traefik.http.routers.mstream-https.rule=Host(`${MSTREAM_SUB?MSTREAM_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.mstream-https.tls=true
      - traefik.http.routers.mstream-https.tls.certresolver=myresolver
      - traefik.http.routers.mstream-https.middlewares=authelia@docker
    networks:
      - t2_proxy
