---
version: "3.8"
networks:
  t2_proxy:
    external: true
services:
  bookstack:
#Bookstack is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor 
    image: lscr.io/linuxserver/bookstack
    container_name: bookstack
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - APP_URL=https://${BOOKSTACK_SUB?BOOKSTACK_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}
      - DB_HOST=bookstack-db
      - DB_USER=bookstack
      - DB_PASS=${BOOKSTACK_MYSQL_ROOT?BOOKSTACK_MYSQL_ROOT Variable not set}
      - DB_DATABASE=bookstackapp
    volumes:
      - /var/data/bookstack/config:/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.bookstack-https.loadbalancer.server.port=80
      - traefik.http.routers.bookstack-https.entrypoints=https
      - traefik.http.routers.bookstack-https.rule=Host(`${BOOKSTACK_SUB?BOOKSTACK_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.bookstack-https.tls=true
      - traefik.http.routers.bookstack-https.tls.certresolver=myresolver
      - traefik.http.routers.bookstack-https.middlewares=authelia@docker
    depends_on:
     - bookstack-db
    networks:
      t2_proxy:
  bookstack-db:
#Database for bookstack
    image: lscr.io/linuxserver/mariadb
    container_name: bookstack_db
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - MYSQL_ROOT_PASSWORD=${BOOKSTACK_MYSQL_ROOT?BOOKSTACK_MYSQL_ROOT Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
      - MYSQL_DATABASE=bookstackapp
      - MYSQL_USER=bookstack
      - MYSQL_PASSWORD=${BOOKSTACK_MYSQL?BOOKSTACK_MYSQL Variable not set}
    volumes:
      - /var/data/bookstack/dbconfig:/config
    restart: unless-stopped
  code-server:
#Code-server is VS Code running on a remote server, accessible through the browser.
    image: lscr.io/linuxserver/code-server
    container_name: code-server
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
      - PASSWORD=${BOOKSTACK_MYSQL?BOOKSTACK_MYSQL Variable not set}
#      - HASHED_PASSWORD= #optional
#      - SUDO_PASSWORD=password #optional
#      - SUDO_PASSWORD_HASH= #optional
      - PROXY_DOMAIN=${CODESERVER_SUB?CODESERVER_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set} #optional
      - DEFAULT_WORKSPACE=/config/workspace #optional
    volumes:
      - /var/data/codeserver/config:/config
      - /mnt/code:/code
      - /mnt/home:/mnt/home
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.codeserver-https.loadbalancer.server.port=8443
      - traefik.http.routers.codeserver-https.entrypoints=https
      - traefik.http.routers.codeserver-https.rule=Host(`${CODESERVER_SUB?CODESERVER_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.codeserver-https.tls=true
      - traefik.http.routers.codeserver-https.tls.certresolver=myresolver
      - traefik.http.routers.codeserver-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  ghost:
#Ghost is an open source, professional publishing platform built on a modern Node.js technology stack â€” designed for teams who need power, flexibility and performance.
    image: ghost:4-alpine
    container_name: ghost
    restart: unless-stopped
    ports:
      - 8080:2368
    environment:
      # see https://ghost.org/docs/config/#configuration-options
      database__client: mysql
      database__connection__host: ghost-db
      database__connection__user: root
      database__connection__password: ${GHOSTDB_PASS?GHOSTDB_PASS Variable not set}
      database__connection__database: ghost
      # this url value is just an example, and is likely wrong for your environment!
      url: http://${GHOST_SUB?GHOST_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}
      # contrary to the default mentioned in the linked documentation, this image defaults to NODE_ENV=production (so development mode needs to be explicitly specified if desired)
      #NODE_ENV: development
    labels:
      - traefik.enable=true
      - traefik.http.services.ghost-https.loadbalancer.server.port=22300 
      - traefik.http.routers.ghost-https.entrypoints=https
      - traefik.http.routers.ghost-https.rule=Host(`${GHOST_SUB?GHOST_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.ghost-https.tls=true
      - traefik.http.routers.ghost-https.tls.certresolver=myresolver
      - traefik.http.routers.ghost-https.middlewares=authelia@docker
    depends_on:
      - ghost-db
    networks:
      t2_proxy: 
  ghost-db:
#Database for ghost
    image: mysql:8.0
    container_name: ghost-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${GHOSTDB_PASS?GHOSTDB_PASS Variable not set}
  hastebin:
#Hastebin is a simple pastebin, which can be installed on a protected network
    image: rlister/hastebin
    container_name: hastebin
    environment:
      STORAGE_TYPE: redis
      STORAGE_HOST: hastebin-redis
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.privatebin-https.loadbalancer.server.port=7777 
      - traefik.http.routers.privatebin-https.entrypoints=https
      - traefik.http.routers.privatebin-https.rule=Host(`${HASTEBIN_SUB?HASTEBIN_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.privatebin-https.tls=true
      - traefik.http.routers.privatebin-https.tls.certresolver=myresolver
      - traefik.http.routers.privatebin-https.middlewares=authelia@docker
    networks:
      t2_proxy:
    depends_on:
      - hastebin-redis
  hastebin-redis:
#hastebin database
    image: redis
    container_name: hostbin-redis
    volumes:
      - /var/data/hastebin/db:/data
  joplin:
#Joplin is an excellent open source note taking application with plenty of features. You can take notes, make to-do list and sync your notes across devices
    image: joplin/server:latest
    container_name: joplin
    restart: unless-stopped
    environment:
      - APP_PORT=22300
      - APP_BASE_URL=${JOPLIN_SUB?JOPLIN_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}
      - DB_CLIENT=pg
      - POSTGRES_PASSWORD=${JOPLINDB_PASS?JOPLINDB_PASS Variable not set}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USER=${JOPLINDB_USER?JOPLINDB_USER Variable not set}
      - POSTGRES_PORT=${JOPLINDB_PORT?JOPLINDB_PORT Variable not set}
      - POSTGRES_HOST=joplindb
    labels:
      - traefik.enable=true
      - traefik.http.services.whiteboard-https.loadbalancer.server.port=22300 
      - traefik.http.routers.whiteboard-https.entrypoints=https
      - traefik.http.routers.whiteboard-https.rule=Host(`${JOPLIN_SUB?JOPLIN_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.whiteboard-https.tls=true
      - traefik.http.routers.whiteboard-https.tls.certresolver=myresolver
      - traefik.http.routers.whiteboard-https.middlewares=authelia@docker
    networks:
      t2_proxy: 
    depends_on:
      joplin-db
  joplin-db:
#Database for joplin
    image: postgres:13
    container_name: joplin-db
    volumes:
      - /var/data/joplindb/db:/var/lib/postgresql/data
    ports:
      - "${JOPLINDB_PORT?JOPLINDB_PORT Variable not set}:5432"
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${JOPLINDB_PASS?JOPLINDB_PASS Variable not set}
      - POSTGRES_USER=${JOPLINDB_USER?JOPLINDB_USER Variable not set}
      - POSTGRES_DB=${JOPLINDB_DB?JOPLINDB_DB Variable not set}
  languagetool:
#LanguageTool is an Open Source proofreading software for English, French, German, Polish, Russian, and more than 20 other languages. 
    image: erikvl87/languagetool
    container_name: languagetool
    environment:
        - langtool_languageModel=/ngrams  # OPTIONAL: Using ngrams data
        - Java_Xms=512m  # OPTIONAL: Setting a minimal Java heap size of 512 mib
        - Java_Xmx=1g  # OPTIONAL: Setting a maximum Java heap size of 1 Gib
    volumes:
        - /var/data/ngrams/data:/ngrams
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.languagetool-https.loadbalancer.server.port=8010
      - traefik.http.routers.languagetool-https.entrypoints=https
      - traefik.http.routers.languagetool-https.rule=Host(`${LANGUAGETOOL_SUB?LANGUAGETOOL_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.languagetool-https.tls=true
      - traefik.http.routers.languagetool-https.tls.certresolver=myresolver
      - traefik.http.routers.languagetool-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  openvscode-server:
#Provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser
    image: lscr.io/linuxserver/openvscode-server
    container_name: openvscode-server
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
#      - CONNECTION_TOKEN= #optional
#      - CONNECTION_SECRET= #optional path to internal file overrides CONNECTION_TOKEN
#      - SUDO_PASSWORD=${SUDO_PASSWORD?SUDO_PASSWORD Variable not set} #optional
#      - SUDO_PASSWORD_HASH=${SUDO_PASSWORD_HASH?SUDO_PASSWORD_HASH Variable not set} #optional set sudo password via hash (takes priority over SUDO_PASSWORD var). Format is $type$salt$hashed
    volumes:
      - /var/data/vscode/config:/config
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.vscode-https.loadbalancer.server.port=3000
      - traefik.http.routers.vscode-https.entrypoints=https
      - traefik.http.routers.vscode-https.rule=Host(`${VSCODE_SUB?VSCODE_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.vscode-https.tls=true
      - traefik.http.routers.vscode-https.tls.certresolver=myresolver
      - traefik.http.routers.vscode-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  privatebin:
#PrivateBin is a minimalist, open source online pastebin where the server has zero knowledge of pasted data. Data is encrypted and decrypted in the browser
    image: privatebin/nginx-fpm-alpine
    container_name: privatebin
    volumes:
      -  /var/data/privatebin/data:/srv/data
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.privatebin-https.loadbalancer.server.port=8080 
      - traefik.http.routers.privatebin-https.entrypoints=https
      - traefik.http.routers.privatebin-https.rule=Host(`${TORRENTMONIROT_SUB?TORRENTMONIROT_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.privatebin-https.tls=true
      - traefik.http.routers.privatebin-https.tls.certresolver=myresolver
      - traefik.http.routers.privatebin-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  projectsend-personal:
#ProjectSend is a self-hosted application (you can install it easily on your own VPS or shared web hosting account) that lets you upload files and assign them to specific clients that you create yourself! Secure, private and easy. No more depending on external services or e-mail to send those files!
    image: lscr.io/linuxserver/projectsend
    container_name: projectsend-personal
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
      - MAX_UPLOAD=<5000>
    volumes:
      - /var/data/projectsend/config:/config
      - /mnt/projectsend/data:/data
    ports:
      - 80:80
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.projectsend-https.loadbalancer.server.port=5055
      - traefik.http.routers.projectsend-https.entrypoints=https
      - traefik.http.routers.projectsend-https.rule=Host(`${PROJECTSEND_PERSONAL_SUB?PROJECTSEND_PERSONAL_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.projectsend-https.tls=true
      - traefik.http.routers.projectsend-https.tls.certresolver=myresolver
      - traefik.http.routers.projectsend-https.middlewares=authelia@docker
    networks:
      t2_proxy:
  wordpress:
#Wordpress ready to go
    image: wordpress
    container_name: wordpress
    restart: unless-stopped
    ports:
      - 8080:80
    environment:
      WORDPRESS_DB_HOST: wordpress-db
      WORDPRESS_DB_USER: ${WORDPRESSDB_USER?WORDPRESSDB_USER Variable not set}
      WORDPRESS_DB_PASSWORD: ${WORDPRESSDB_PASS?WORDPRESSDB_PASS Variable not set}
      WORDPRESS_DB_NAME: ${WORDPRESSDB_ROOTPASS?WORDPRESSDB_ROOTPASS Variable not set}
    volumes:
      - /var/data/wordpress/html:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.http.services.wordpress-https.loadbalancer.server.port=22300 
      - traefik.http.routers.wordpress-https.entrypoints=https
      - traefik.http.routers.wordpress-https.rule=Host(`${WORDPRESS_SUB?WORDPRESS_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.wordpress-https.tls=true
      - traefik.http.routers.wordpress-https.tls.certresolver=myresolver
      - traefik.http.routers.wordpress-https.middlewares=authelia@docker
    networks:
      t2_proxy: 
    depends_on:
      - wordpress-db
  wordpress-db:
#Database for wordpress
    image: mysql:5.7
    container_name: wordpress-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${WORDPRESSDB_DB?WORDPRESSDB_DB Variable not set}
      MYSQL_USER: ${WORDPRESSDB_USER?WORDPRESSDB_USER Variable not set}
      MYSQL_PASSWORD: ${WORDPRESSDB_PASS?WORDPRESSDB_PASS Variable not set}
      MYSQL_ROOT_PASSWORD: ${WORDPRESSDB_ROOTPASS?WORDPRESSDB_ROOTPASS Variable not set}
    volumes:
      - /var/data/wordpress/db:/var/lib/mysql







