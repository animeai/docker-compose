---
# Self-hosted Javascript emulation for various system.
version: "3.8"
networks:
  t2_proxy:
    external: true
services:
  emulatorjs:
    image: lscr.io/linuxserver/emulatorjs
    container_name: emulatorjs
    environment:
      - PUID=${PUID?PUID Variable not set}
      - PGID=${PGID?PGID Variable not set}
      - TZ=${TIMEZONE?TIMEZONE Variable not set}
      - SUBFOLDER=/  # optional
    volumes:
      - /var/data/emulatorjs/config:/config
      - /mnt/emulation:/data
    restart: ${RESTART_POLICY?RESTART_POLICY Variable not set}
    labels:
      - traefik.enable=true
      - traefik.http.services.emulatorjs-backend-https.loadbalancer.server.port=3000
      - traefik.http.routers.emulatorjs-backend-https.entrypoints=https
      - traefik.http.routers.emulatorjs-backend-https.rule=Host(`${EMULATORJS_BACKEND_SUB?EMULATORJS_BACKEND_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.emulatorjs-backend-https.tls=true
      - traefik.http.routers.emulatorjs-backend-https.tls.certresolver=myresolver
      - traefik.http.routers.emulatorjs-backend-https.middlewares=authelia@docker
      - traefik.http.services.emulatorjs-https.loadbalancer.server.port=80
      - traefik.http.routers.emulatorjs-https.entrypoints=https
      - traefik.http.routers.emulatorjs-https.rule=Host(`${EMULATORJS_SUB?EMULATORJS_SUB Variable not set}.${DOMAIN?DOMAIN Variable not set}`)
      - traefik.http.routers.emulatorjs-https.tls=true
      - traefik.http.routers.emulatorjs-https.tls.certresolver=myresolver
      - traefik.http.routers.emulatorjs-https.middlewares=authelia@docker
    networks:
      t2_proxy:
